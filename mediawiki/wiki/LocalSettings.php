<?php
# This file was automatically generated by the MediaWiki 1.35.1
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if (getenv('DEBUG') == 'true') {
	error_reporting(-1);
	ini_set('display_errors', 1);
}
if (!defined('MEDIAWIKI')) {
	exit;
}


## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "IIASA ECE Wiki";
$wgMetaNamespace = "IIASA_ECE_Wiki";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = getenv("WIKI_PATH");

## The protocol and server name to use in fully-qualified URLs
$wgServer = getenv("BASE_URL");

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = ['1x' => "$wgResourceBasePath/resources/assets/wiki.png"];

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "apache@ðŸŒ».invalid";
$wgPasswordSender = "apache@ðŸŒ».invalid";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = getenv("MEDIAWIKI_DATABASE_HOST");
$wgDBname = getenv("MEDIAWIKI_DATABASE_NAME");
$wgDBuser = getenv("MEDIAWIKI_DATABASE_USER");
$wgDBpassword = getenv("MEDIAWIKI_DATABASE_PASSWORD");

# MySQL specific settings
$wgDBprefix = getenv("MEDIAWIKI_DATABASE_PREFIX");

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = [];

$wgAllowExternalImages = true;
$wgAllowImageTag = true;

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgUploadDirectory = "/var/www/html/wiki/images";
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

$wgDebugToolbar = getenv("DEBUG") == 'true';

$wgDebugLogFile = null;
if (getenv("DEBUG") == 'true') {
	$wgDebugLogFile = "/var/log/mediawiki/debug-{$wgDBname}.log";
}

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = true;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale. This should ideally be set to an English
## language locale so that the behaviour of C library functions will
## be consistent with typical installations. Use $wgLanguageCode to
## localise the wiki.
$wgShellLocale = "C.UTF-8";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/data/Names.php
$wgLanguageCode = "en";

$wgSecretKey = getenv("MEDIAWIKI_SECRET_KEY");

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "d9dd5cef166facab";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# The following permissions were set based on your choice in the installer
$wgGroupPermissions['*']['createaccount'] = false;
$wgGroupPermissions['*']['autocreateaccount'] = true;
$wgGroupPermissions['*']['edit'] = false;
$wgGroupPermissions['*']['read'] = false;

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'vector', 'monobook':
$wgDefaultSkin = "timeless";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin('MonoBook');
wfLoadSkin('Timeless');
wfLoadSkin('Vector');

$wgTimelessBackdropImage = 'iiasa_logo_white.svg';
$wgUseSiteCss = true;

# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtension( 'ExtensionName' );
# to LocalSettings.php. Check specific extension documentation for more details.
# The following extensions were automatically enabled:
wfLoadExtension('CategoryTree');
wfLoadExtension('Cite');
wfLoadExtension('CiteThisPage');
wfLoadExtension('CodeEditor');
wfLoadExtension('Gadgets');
wfLoadExtension('ImageMap');
wfLoadExtension('InputBox');
wfLoadExtension('Interwiki');
wfLoadExtension('LocalisationUpdate');
wfLoadExtension('MultimediaViewer');
wfLoadExtension('Nuke');
wfLoadExtension('PageImages');
wfLoadExtension('ParserFunctions');
wfLoadExtension('PdfHandler');
wfLoadExtension('PluggableAuth');
wfLoadExtension('Poem');
wfLoadExtension('Renameuser');
wfLoadExtension('ReplaceText');
wfLoadExtension('Scribunto');
wfLoadExtension('SyntaxHighlight_GeSHi');
wfLoadExtension('TemplateData');
wfLoadExtension('VisualEditor');
wfLoadExtension('WikiEditor');
wfLoadExtension('Loops');
wfLoadExtension('Variables');

wfLoadExtension('OpenIDConnect');
# End of automatically generated settings.
# Add more configuration options below.

# wfLoadExtension('SimpleSAMLphp');
$wgPluggableAuth_EnableLocalLogin = true;
$wgPluggableAuth_ButtonLabel = 'Log in with your IIASA account';

$tenantID = getenv("OPENID_TENANT_ID");
$clientID = getenv("OPENID_CLIENT_ID");
$clientSecret = getenv("OPENID_CLIENT_SECRET");

$wgOpenIDConnect_Config["https://login.microsoftonline.com/{$tenantID}/v2.0/"] = [
	'clientID' => $clientID,
	'clientsecret' => $clientSecret,
	'scope' => ['openid', 'email', 'profile']
];
$wgOpenIDConnect_UseRealNameAsUserName = true;

# $wgSimpleSAMLphp_InstallDir = '/var/simplesamlphp/';
# $wgSimpleSAMLphp_AuthSourceId = 'wiki-sp';

# $wgSimpleSAMLphp_RealNameAttribute = "displayName";
# $wgSimpleSAMLphp_EmailAttribute = "mail";
# $wgSimpleSAMLphp_UsernameAttribute = "sn";
$wgShowExceptionDetails = getenv("DEBUG") == 'true';
$wgMemoryLimit = "100M";
